name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux
            runner: ubuntu-latest
            goos: linux
            goarch: amd64
            output: youtube-audio-extractor-linux-amd64
          - os: macos
            runner: macos-latest
            goos: darwin
            goarch: amd64
            output: youtube-audio-extractor-darwin-amd64
          - os: macos-arm64
            runner: macos-latest
            goos: darwin
            goarch: arm64
            output: youtube-audio-extractor-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install dependencies (Linux)
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev xorg-dev

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: |
          go build -o youtube-audio-extractor -ldflags="-s -w"

      - name: Create macOS .app bundle
        if: matrix.goos == 'darwin'
        run: |
          mkdir -p "YouTube Audio Extractor.app/Contents/MacOS"
          mkdir -p "YouTube Audio Extractor.app/Contents/Resources"
          cp youtube-audio-extractor "YouTube Audio Extractor.app/Contents/MacOS/"
          cp Info.plist "YouTube Audio Extractor.app/Contents/"
          chmod +x "YouTube Audio Extractor.app/Contents/MacOS/youtube-audio-extractor"

      - name: Create zip archive (macOS)
        if: matrix.goos == 'darwin'
        run: |
          zip -r ${{ matrix.output }}.zip "YouTube Audio Extractor.app"

      - name: Create zip archive (Linux)
        if: matrix.goos == 'linux'
        run: |
          zip ${{ matrix.output }}.zip youtube-audio-extractor

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}.zip

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure
        run: ls -R ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/youtube-audio-extractor-*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
